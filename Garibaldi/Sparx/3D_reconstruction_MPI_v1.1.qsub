#PBS -l nodes=8:ppn=4
#PBS -l walltime=400:00:00
#PBS -l cput=1600:00:00
#PBS -l mem=128gb

cd /gpfs/home/rkhayat/Wilson/CR9112-H9
source /gpfs/home/rkhayat/Applications/EMAN2/eman2.cshrc

module load openmpi

# set number of processors
set proc = 32

set model = threed.hdf
set stack = start 
set ou = 50
set sym = c3
set bin = 2
set npad = 4

rm -f recon_Sparx
ln -s $PBSREMOTEDIR recon_Sparx
chmod 755 recon_Sparx

#Copy over the initial model
e2proc3d.py $model recon_Sparx/{$model} --meanshrink={$bin}
cd recon_Sparx

#Collect all the raw particles
rsync -rltouv --partial amibox03.scripps.edu:/ami/data17/appion/11may03j/stacks/centered1/ali.hed .
rsync -rltouv --partial amibox03.scripps.edu:/ami/data17/appion/11may03j/stacks/centered1/ali.img .

rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11may03j/stacks/stack1_AllTilt/ali.hed ali_tilt.hed
rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11may03j/stacks/stack1_AllTilt/ali.img ali_tilt.img

rsync -rltouv --partial amibox03.scripps.edu:/ami/data17/appion/11mar08a/stacks/centered_0tilt/ali.hed ali2.hed
rsync -rltouv --partial amibox03.scripps.edu:/ami/data17/appion/11mar08a/stacks/centered_0tilt/ali.img ali2.img

rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11mar08a/stacks/stack1_AllTilt/ali.hed ali2_tilt.hed
rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11mar08a/stacks/stack1_AllTilt/ali.img ali2_tilt.img

#Combine all the raw particles into a single stack
e2proc2d.py ali.hed bdb:{$stack} --meanshrink={$bin}
e2proc2d.py ali_tilt.hed bdb:{$stack} --meanshrink={$bin}
e2proc2d.py ali2.hed bdb:{$stack} --meanshrink={$bin}
e2proc2d.py ali2_tilt.hed bdb:{$stack} --meanshrink={$bin}

sxheader.py bdb:$stack --params=active --one
sxheader.py bdb:$stack --zero --params=xform.align2d --params=xform.projection

mpirun -np $proc sxali3d.py --MPI bdb:$stack $model refine_1 --ou=$ou --rs=1 --xr='30 15 8  2 1' --ts='6 3 2 1 0.5 0.5' --an='-1' --snr=1.00 --maxit=20 --ref_a=S --npad=$npad --sym=$sym --CTF
sxheader.py bdb:$stack --print --params=xform.projection > refine_1/refine.parameter

set pixel_error = `ls -lt refine_1/pixel_Error_00* | head -1 | awk '{print $8}'`
awk '{print $11}' $pixel_error >  refine_1/activity.txt
grep -v "and activity of 0" $pixel_error | awk '{print $2}' > refine_1/keep_particles.txt
e2proc2d.py bdb:stack refine_1.hdf --list=refine_1/keep_particles.txt

set model_2 = `ls -lt refine_1/volf00* | head -1 | awk '{print $8}'`
mpirun -np $proc sxali3d.py --MPI refine_1.hdf $model_2 refine_2 --ou=$ou --rs=1 --xr='2 1' --ts='1 0.5' --delta='3 2' --an='-1' --snr=1.00 --maxit=20 --ref_a=S --npad=$npad --sym=$sym --CTF
# sxheader.py bdb:$stack --print --params=xform.projection > refine_2/refine.parameter

set pixel_error = `ls -lt refine_2/pixel_Error_00* | head -1 | awk '{print $8}'`
awk '{print $11}' $pixel_error >  refine_2/activity.txt
grep -v "and activity of 0" $pixel_error | awk '{print $2}' > refine_2/keep_particles.txt
e2proc2d.py refine_1.hdf refine_2.hdf --list=refine_2/keep_particles.txt
# sxheader.py bdb:$stack --import=refine_2/activity.txt --params=active

mpirun -np $proc sxlocal_ali3d.py bdb:$stack refine_local --ou=$ou --delta=2 --npad=2 --ts=0.25 --sym=$sym --MPI --CTF
sxheader.py bdb:$stack --print --params=xform.projection > refine_local.parameter
