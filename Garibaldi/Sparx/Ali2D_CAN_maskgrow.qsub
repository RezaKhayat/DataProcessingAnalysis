#PBS -l nodes=4:ppn=4
#PBS -l walltime=400:00:00
#PBS -l cput=1600:00:00
#PBS -l mem=16gb

cd /gpfs/home/rkhayat/Wilson/HIV_gp120Trimer/11oct31d
source ~/Applications/EMAN2/eman2.cshrc

set proc = 16
# set parameters for the stack
set stack = start
set bin = 2

# cycles is nubmer of times classes are divided by 2.  Therefore total classes = 2^cycles
set cycles=10

# set parameters for the align2d search
# these have the sampe definition as the variables in the Sparx manual
set tr = '"8 6 4 2 1"'
set ts = '"2 2 2 1 0.5"'
set rs = 1
set ir = 1
set ou = 29

# masking during class averaging
# initial mask
set mask = 16
# mask increment grows for each cycles
set d_mask = 1

rm -f recon_RF_CTFBSHOW_rad16
ln -s $PBSREMOTEDIR recon_RF_CTFBSHOW_rad16  
chmod 755 recon_RF_CTFBSHOW_rad16   
cd recon_RF_CTFBSHOW_rad16

rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11oct31d/stacks/stack1/CTFBSHOW_Particles/start_bshow.hed .
rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11oct31d/stacks/stack1/CTFBSHOW_Particles/start_bshow.img .

if ( $bin > 1 ) then
  e2proc2d.py start_bshow.hed bdb:{$stack} --meanshrink={$bin} --process=normalize
else
  sxcpy.py Full_Stack.hed bdb:{$stack} 
endif

# set the parameters in the header to zero value
sxheader.py bdb:{$stack} --zero --params=xform.align2d

# activate the particles
sxheader.py bdb:{$stack} --one --params=active

# Reference free alignment and classification
mpirun -np $proc sxali2d.py bdb:{$stack} out_bin{$bin}_sxali2d --ir={$ir} --ou={$ou} --rs={$rs} --xr="8 6 4 2 1" --yr="8 6 4 2 1" --ts="2 2 2 1 0.5" --MPI
sxtransform2d.py bdb:{$stack} start_ali2d.hdf

set particles = `e2iminfo.py bdb:{$stack} | grep "total images" | awk '{print $1}'`
set iterations = `echo $particles | awk '{print $1 * 15}'`
set i = 1
set p_round = 1

while ($i <= $cycles)
  set round = `echo $p_round | awk '{print 2*$1}'`
  proc2d start_ali2d.hdf start_ali2d.hed mask=$mask norm
  set mask= `expr $mask + $d_mask`
  mkdir out_bin{$bin}_CAN_{$round}/
  /gpfs/home/rkhayat/Applications/Adapt2_01/CAN start_ali2d out_bin{$bin}_CAN_{$round}/averages $iterations 0.1 0.001 20 {$round}
  proc2d out_bin{$bin}_CAN_{$round}/averages_avg.hed out_bin{$bin}_CAN_{$round}/averages_avg.hdf
  mpirun -np $proc sxmref_ali2d.py bdb:{$stack} out_bin{$bin}_CAN_{$round}/averages_avg.hdf out_bin{$bin}_sxmref_{$round} --ir={$ir} --ou={$ou} --rs={$rs} --xr=3 --yr=3 --maxit=6  --MPI
  sxheader.py bdb:{$stack} --print --params=xform.align2d > out_bin{$bin}_sxmref_{$round}/fparamz.txt
  rm -rf start_ali2d.*  
  sxtransform2d.py bdb:{$stack} start_ali2d.hdf
  set p_round = `echo $round | awk '{print $1}'`
  set i = `expr $i + 1`
end

