#PBS -l nodes=4:ppn=4
#PBS -l walltime=400:00:00
#PBS -l cput=1600:00:00
#PBS -l mem=16gb

cd /gpfs/home/rkhayat/Wilson/HIV_gp120Trimer/11oct27i
source ~/Applications/EMAN2/eman2.cshrc

set proc = 1
# set parameters for the stack
set stack = start
set bin = 4

# iterations is nubmer of times classes are divided by 2.  Therefore total classes = 2^iterations
set iterations=10

# set parameters for the align2d search
# these have the sampe definition as the variables in the Sparx manual
set tr = '"8 6 4 2 1"'
set ts = '"2 2 2 1 0.5"'
set rs = 1
set ir = 1
set ou = 29

# rm -f recon_RF
# ln -s $PBSREMOTEDIR recon_RF  
# chmod 755 recon_RF   
cd recon_RF

# rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11oct27i/stacks/stack1/start_untilt.hed .
# rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11oct27i/stacks/stack1/start_untilt.img .

# rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11oct27i/stacks/stack1/start_tilt.hed .
# rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11oct27i/stacks/stack1/start_tilt.img .

# rsync -rltouv --partial amibox03.scripps.edu:/ami/data00/appion/11oct27i/stacks/stack1/ctf_particles_total.sparx .

# prepare the stack for Sparx
e2proc2d.py start_untilt.hed bdb:Full_Stack 
e2proc2d.py start_tilt.hed bdb:Full_Stack 

sxheader.py bdb:Full_Stack --import=ctf_particles_total.sparx --params=ctf

if ( $bin > 1 ) then
  e2proc2d.py bdb:Full_Stack bdb:{$stack} --meanshrink={$bin} --process=normalize
else
  sxcpy.py bdb:Full_Stack bdb:{$stack} 
endif

# set the parameters in the header to zero value
sxheader.py bdb:{$stack} --zero --params=xform.align2d

# activate the particles
sxheader.py bdb:{$stack} --one --params=active

# Reference free alignment and classification
mpirun -np $proc sxali2d.py bdb:{$stack} out_bin{$bin}_sxali2d --ir={$ir} --ou={$ou} --rs={$rs} --xr="8 6 4 2 1" --yr="8 6 4 2 1" --ts="2 2 2 1 0.5" --MPI
sxtransform2d.py bdb:{$stack} start_ali2d.hdf

set i = 1
set p_round = 1

while ($i <= $iterations)
  set round = `echo $p_round | awk '{print 2*$1}'`
  mpirun -np $proc sxk_means.py start_ali2d.hdf out_bin{$bin}_sxk_means_{$round} --K={$round} --trials=10 --maxit=60 --MPI
  mpirun -np $proc sxmref_ali2d.py bdb:{$stack} out_bin{$bin}_sxk_means_{$round}/averages.hdf out_bin{$bin}_sxmref_{$round} --ir={$ir} --ou={$ou} --rs={$rs} --xr=3 --yr=3 --maxit=6  --MPI
  sxheader.py bdb:{$stack} --print --params=xform.align2d > out_bin{$bin}_sxmref_{$round}/fparamz.txt
  rm -rf start_ali2d.hdf
  sxtransform2d.py bdb:{$stack} start_ali2d.hdf
  set p_round = `echo $round | awk '{print $1}'`
  set i = `expr $i + 1`
end

